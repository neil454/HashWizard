"""
File: preprocess_data.py (Project 1 - HashWizard)
Authors:    Ai Onda		        aionda1@umbc.edu
            Michael Vu		    mvu2@umbc.edu
            Neil Joshi		    njoshi2@umbc.com
            Patrick Jenkins	    pjenk1@umbc.edu
            Tae Song		    jw65293@umbc.edu
Date: 12/10/15
Class: CMSC 471, Fall 2015
Instructor: Abhay Kashyap
Section: 02

    This script preprocesses the raw tweets generated by fetch_raw_data.py

"""

from config import *
import re

FILTER_WITH_PREFIX = ["@", "#", "htt"]


def preprocess_tweet(tweet):
    # Get stopwords (i.e. the, of, a, at, is, etc.)
    # Retrieved from http://www.ranks.nl/stopwords
    with open(name="stop_words.txt", mode='r') as stop_words_file:
        stop_words = stop_words_file.read().splitlines()

    # Split tweet into tokens
    tweet_split = tweet.split()
    for i in range(len(tweet_split)):
        # Remove Tweet-specific tokens (Hashtags, @s, links
        for prefix in FILTER_WITH_PREFIX:
            if tweet_split[i].startswith(prefix):
                tweet_split[i] = " "

        # Lowercase the token
        tweet_split[i] = tweet_split[i].lower()

        # Remove Stopwords
        if tweet_split[i] in stop_words:
            tweet_split[i] = " "
    # Rejoin tweet
    tweet = " ".join(tweet_split)

    # Remove punctuation by replacing all chars that aren't alphanumeric or '-', with whitespace
    tweet = re.sub("[^a-zA-Z0-9 -]", " ", tweet)

    # Cleanup tweet by replacing all sequential spaces with one space, and remove all 1/2-letter words
    # Also remove any "amp"s, which show up a lot for some reason in tweets
    tweet = ' '.join(word for word in tweet.split() if len(word) > 2 and word != "amp")
    return tweet


def main():
    for label in LABELS:
        with open(name="./corpus_raw/" + label + ".txt", mode='r') as data_file:
            tweets = data_file.readlines()
        with open(name="./corpus_preproc/" + label + ".txt", mode='w') as data_preproc_file:
            tweets_preproc = []
            for tweet in tweets:
                preprocessed_tweet = preprocess_tweet(tweet)
                tweets_preproc.append(preprocessed_tweet)
                # data_preproc_file.write(preprocessed_tweet+"\n")
                # print preprocessed_tweet
            tweets_preproc_no_duplicates = list(set(tweets_preproc))
            for tweet in tweets_preproc_no_duplicates:
                data_preproc_file.write(tweet+"\n")
        print label, "PREPROCESSING DONE"

if __name__ == "__main__":
    main()